#+title: Simple CRUD | TypesCript + React + PostgreSQL

Este projeto é um CRUD (Create Read Update Delete) feito como desafio para um processo de seleção de um estágio.
A proposta era utilizar [[https://react.dev/][React]] e [[https://nodejs.org/en][NodeJS]] para desenvolver a aplicação, fazendo telas para Registro de produtos,
modificação de produtos, apresentação de produtos, e haviam 3 desafios, criar um widget de paginação do 0, e
criar mais duas telas, uma que apresenta os 3 produtos mais caros, e outra com os 3 produtos com maior estoque.
Foi especificada a estrutura de um produto dentre outras coisas.

Fiz o projeto com todos os desafios, o maior sendo o widget de paginação. Acabei sendo selecionado mas o recrutador
nunca mais entrou em contato.. (então será que fui selecionado mesmo?!). Escolhi depois de uns meses adaptar o projeto
para [[https://www.typescriptlang.org/][TypeScript]] e integrá-lo com [[https://www.postgresql.org/][PostgreSQL]] (antes o projeto tinha um array em memória com os produtos por questão de
simplicidade).

A aplicação foi hospedada utilizando o serviço de hospedagem do [[https://render.com/][Render]], tanto o servidor quanto o banco de dados.
Eis o link para acessálo: https://simples-crud-challenge.onrender.com

* Estrutura do código fonte
+ Pasta raiz/
  - [[https://github.com/odecam0/desafio-thummi/blob/main/index.ts][index.ts]] -> Código fonte do servidor, utilizando [[https://expressjs.com/][Express.js]], e queries para o [[https://www.postgresql.org/][PostgreSQL]] utilizando o pacote [[https://github.com/porsager/postgres][Postgres]]
  - [[https://github.com/odecam0/desafio-thummi/blob/main/db.mjs][db.mjs]]   -> Modulo que conecta no banco de dados e exporta um objeto para acessá-lo
  - client/  
    + src/   -> Pasta com o código fonte do Front-End utilizando [[https://react.dev/][React]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/App.js][App.js]] ->
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/RegisterProduct.tsx][RegisterProduct.tsx]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/ModifyProduct.tsx][ModifyProduct.tsx]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/ShowProducts.tsx][ShowProducts.tsx]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/PaginationWidget.tsx][PaginationWidget.tsx]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/ExpensiveProducts.tsx][ExpensiveProducts.tsx]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/MostInStock.tsx][MostInStock.tsx]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/CustomTypes.ts][CustomTypes.ts]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/StyledButton.js][StyledButton.js]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/StyledForm.js][StyledForm.js]]
      - [[https://github.com/odecam0/desafio-thummi/blob/main/client/src/TableStyle.js][TableStyle.js]]

* Paginação
* Coisas a fazer:
- [ ] Escrever uma breve descrição para cada arquivo na pasta client/src/.
- [ ] Documentar como a paginação está sendo feita.
- [ ] Adcionar type annotations nas requisições e respostas em index.ts.
